pipeline {
    agent{
        node{
            label 'aws-vm'
            }
    }
     options    {
                timestamps()
                buildDiscarder(logRotator(numToKeepStr: '2', artifactNumToKeepStr: '2'))
                timeout(time: 120, unit: 'MINUTES')
                disableConcurrentBuilds()
                }
     parameters {
            string(name: 'appBranch', defaultValue: 'master', description: "Application Branch name of the Repo")
            string(name: 'gitURL', defaultValue: 'https://github.com/ReshwanthRavula/aws-maven-app.git', description: "pass the maven repo source code giturl")
                } 
    

    stages {
        stage('check out') {
            steps {
                git branch: appBranch, url:'https://github.com/ReshwanthRavula/aws-maven-app.git'
            }
        }
        stage('maven build') {
            steps {
                sh 'mvn clean package'
            }
        }
        stage('docker build') {
            steps {
                sh 'docker build . -f dockerfile_testapp -t reshwanth35/mavendemoapp:latest21'
            }
        }
        stage('docker login') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerLoginIDPWD', passwordVariable: 'dockerpasswd', usernameVariable: 'dockerusername')]) 
                {
                    sh 'docker login -u ${dockerusername} -p ${dockerpasswd}'
                }
            }
        }  
        stage('docker push'){
            steps{
                sh 'docker push reshwanth35/mavendemoapp:latest21'
            }
        }
        stage('Docker Run') {
            steps {
                sh 'docker run -d -p 8080:8080 reshwanth35/mavendemoapp:latest21'
            }
        }
    }
}
